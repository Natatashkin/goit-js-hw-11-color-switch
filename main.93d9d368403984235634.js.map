{"version":3,"sources":["webpack:///./js/colors.js","webpack:///./js/selectors.js","webpack:///./js/plagin.js","webpack:///./index.js"],"names":["body","document","querySelector","btnStart","btnStop","nameColor","this","intervalId","isActive","colors","onBtnStart","setInterval","onChangeColor","onBtnStop","clearInterval","randomIntegerFromInterval","min","max","index","Math","floor","random","length","style","backgroundColor","textContent","addEventListener","colorPicker","ColorPicker"],"mappings":"uIAAe,GACb,UACA,UACA,UACA,UACA,UACA,WCNWA,EAAOC,SAASC,cAAc,QAC9BC,EAAWF,SAASC,cAAc,yBAClCE,EAAUH,SAASC,cAAc,wBACjCG,EAAYJ,SAASC,cAAc,a,aCA5C,aACII,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EAChBF,KAAKG,OAASA,E,2BAGlBC,WAAA,WAAa,WACTJ,KAAKE,WAGLF,KAAKE,UAAW,EAChBF,KAAKC,WAAaI,aAAY,WAC1B,EAAKC,kBAEN,O,EAGPC,UAAA,WACAC,cAAcR,KAAKC,YACfD,KAAKE,UAAW,G,EAGpBO,0BAAA,SAA0BC,EAAKC,GAC3B,IAAMC,EAAQZ,KAAKG,OAAOU,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IACnEE,IAAUZ,KAAKY,MACfZ,KAAKS,0BAA0BC,EAAKC,GAEpCX,KAAKY,MAAQA,G,EAGrBN,cAAA,WACIN,KAAKS,0BAA0B,EAAGT,KAAKG,OAAOa,OAAS,GACvDtB,EAAKuB,MAAMC,gBAAkBlB,KAAKY,MAClCb,EAAUkB,MAAMC,gBAAkBlB,KAAKY,MACvCb,EAAUoB,YAAcnB,KAAKY,O,KChCrCf,EAASuB,iBAAiB,SAAS,WAC/BC,EAAYjB,gBAEhBN,EAAQsB,iBAAiB,SAAS,WAC9BC,EAAYd,eAIhB,IAAMc,EAAc,IAAIC,I","file":"main.93d9d368403984235634.js","sourcesContent":["export default [\r\n  '#FFFFFF',\r\n  '#2196F3',\r\n  '#4CAF50',\r\n  '#FF9800',\r\n  '#009688',\r\n  '#795548',\r\n];","export const body = document.querySelector('body');\r\nexport const btnStart = document.querySelector('[data-action=\"start\"]');\r\nexport const btnStop = document.querySelector('[data-action=\"stop\"]');\r\nexport const nameColor = document.querySelector('.js-color');","import colors from './colors';\r\nimport { body, nameColor } from './selectors';\r\nexport default class {\r\n    constructor() {\r\n        this.intervalId = null;\r\n        this.isActive = false;\r\n        this.colors = colors;\r\n    }\r\n\r\n    onBtnStart() {\r\n    if (this.isActive) {\r\n        return;\r\n    }\r\n        this.isActive = true;\r\n        this.intervalId = setInterval(() => {\r\n            this.onChangeColor();\r\n    \r\n        }, 1000);\r\n    }\r\n    \r\n    onBtnStop() {\r\n    clearInterval(this.intervalId);\r\n        this.isActive = false;\r\n    }\r\n\r\n    randomIntegerFromInterval(min, max) {\r\n        const index = this.colors[Math.floor(Math.random() * (max - min + 1) + min)];\r\n        if (index === this.index) {\r\n            this.randomIntegerFromInterval(min, max);\r\n        } else {\r\n            this.index = index;\r\n        }\r\n    }\r\n    onChangeColor() {\r\n        this.randomIntegerFromInterval(0, this.colors.length - 1);\r\n        body.style.backgroundColor = this.index;\r\n        nameColor.style.backgroundColor = this.index;\r\n        nameColor.textContent = this.index;\r\n}   \r\n}\r\n","import './styles.css';\nimport colors from './js/colors';\nimport { btnStart, btnStop } from './js/selectors';\nimport ColorPicker from './js/plagin';\n\nbtnStart.addEventListener('click', () => {\n    colorPicker.onBtnStart()\n});\nbtnStop.addEventListener('click', () => {\n    colorPicker.onBtnStop()\n});\n\n\nconst colorPicker = new ColorPicker();\n\n\n\n\n"],"sourceRoot":""}