{"version":3,"sources":["webpack:///./colors.js","webpack:///./index.js"],"names":["body","document","querySelector","btnStart","btnStop","nameColor","addEventListener","colorPicker","onBtnStart","onBtnStop","this","intervalId","isActive","colors","setInterval","onChangeColor","clearInterval","randomIntegerFromInterval","min","max","index","Math","floor","random","length","style","backgroundColor","textContent"],"mappings":"uSAAe,GACb,UACA,UACA,UACA,UACA,UACA,WCDWA,EAAOC,SAASC,cAAc,QAC9BC,EAAWF,SAASC,cAAc,yBAClCE,EAAUH,SAASC,cAAc,wBACjCG,EAAYJ,SAASC,cAAc,aAEhDC,EAASG,iBAAiB,SAAS,WAC/BC,EAAYC,gBAEhBJ,EAAQE,iBAAiB,SAAS,WAC9BC,EAAYE,e,IA6CVF,EAAc,I,WAzChB,aACIG,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EAChBF,KAAKG,OAASA,E,2BAGlBL,WAAA,WAAa,WACTE,KAAKE,WAILF,KAAKE,UAAW,EAEpBF,KAAKC,WAAaG,aAAY,WAC1B,EAAKC,kBAEN,O,EAGHN,UAAA,WACAO,cAAcN,KAAKC,YACfD,KAAKE,UAAW,G,EAGpBK,0BAAA,SAA0BC,EAAKC,GAC3B,IAAMC,EAAQV,KAAKG,OAAOQ,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IACnEE,IAAUV,KAAKU,MACfV,KAAKO,0BAA0BC,EAAKC,GAEpCT,KAAKU,MAAQA,G,EAIrBL,cAAA,WACIL,KAAKO,0BAA0B,EAAGP,KAAKG,OAAOW,OAAS,GACvDxB,EAAKyB,MAAMC,gBAAkBhB,KAAKU,MAClCf,EAAUoB,MAAMC,gBAAkBhB,KAAKU,MACvCf,EAAUsB,YAAcjB,KAAKU,O","file":"main.7a6263a86b8a1f1f4ace.js","sourcesContent":["export default [\r\n  '#FFFFFF',\r\n  '#2196F3',\r\n  '#4CAF50',\r\n  '#FF9800',\r\n  '#009688',\r\n  '#795548',\r\n];","import './styles.css';\nimport colors from './colors';\n\n// let intervalId = null;\n// let isActive = false;\nexport const body = document.querySelector('body');\nexport const btnStart = document.querySelector('[data-action=\"start\"]');\nexport const btnStop = document.querySelector('[data-action=\"stop\"]');\nexport const nameColor = document.querySelector('.js-color');\n\nbtnStart.addEventListener('click', () => {\n    colorPicker.onBtnStart()\n});\nbtnStop.addEventListener('click', () => {\n    colorPicker.onBtnStop()\n});\n\nclass ColorPicker {\n    constructor() {\n        this.intervalId = null;\n        this.isActive = false;\n        this.colors = colors;\n    }\n\n    onBtnStart() {\n    if (this.isActive) {\n        return;\n    }\n\n        this.isActive = true;\n        \n    this.intervalId = setInterval(() => {\n        this.onChangeColor();\n    \n    }, 1000);\n    }\n    \n    onBtnStop() {\n    clearInterval(this.intervalId);\n        this.isActive = false;\n    }\n\n    randomIntegerFromInterval(min, max) {\n        const index = this.colors[Math.floor(Math.random() * (max - min + 1) + min)];\n        if (index === this.index) {\n            this.randomIntegerFromInterval(min, max);\n        } else {\n            this.index = index;\n        }\n    }\n    \n    onChangeColor() {\n        this.randomIntegerFromInterval(0, this.colors.length - 1);\n        body.style.backgroundColor = this.index;\n        nameColor.style.backgroundColor = this.index;\n        nameColor.textContent = this.index;\n}   \n}\n\nconst colorPicker = new ColorPicker();\n\n\n\n\n"],"sourceRoot":""}